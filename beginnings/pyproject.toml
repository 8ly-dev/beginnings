[project]
name = "beginnings"
version = "0.1.0"
description = "A thoughtful web framework built on FastAPI"
readme = "README.md"
authors = [
    { name = "Zech Zimmerman", email = "hi@zech.codes" }
]
requires-python = ">=3.9"
dependencies = [
    "fastapi>=0.104.0",
    "pyyaml>=6.0",
    "uvicorn>=0.24.0",
    "pydantic>=2.0.0",
    "jinja2>=3.0.0",
    "python-multipart>=0.0.20",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "click>=8.0.0",
    "watchdog>=3.0.0",
    "psutil>=5.9.0",
    "aiofiles>=23.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "bandit>=1.7.0",
]
database = [
    "asyncpg",
    "sqlalchemy",
]
cache = [
    "redis",
]
auth = [
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
]

[project.scripts]
beginnings = "beginnings.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 100
target-version = "py39"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "N", "UP", "YTT", "ANN", "BLE", "FBT", "B", "A", "COM", "C4", "DTZ", "T10", "DJ", "EM", "EXE", "FA", "ISC", "ICN", "G", "INP", "PIE", "T20", "PYI", "PT", "Q", "RSE", "RET", "SLF", "SLOT", "SIM", "TID", "TCH", "INT", "ARG", "PTH", "ERA", "PD", "PGH", "PL", "TRY", "FLY", "NPY", "AIR", "PERF", "FURB", "LOG", "RUF"]
ignore = ["ANN101", "ANN102", "COM812", "ISC001", "TRY003", "EM102", "TRY301", "PIE790"]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101", "PLR2004", "PLC0415"]

[tool.mypy]
python_version = "3.9"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = "--strict-markers --strict-config"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B101"]

[dependency-groups]
dev = [
    "bandit>=1.8.5",
    "httpx>=0.27.0",
    "mypy>=1.16.1",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=6.2.1",
    "ruff>=0.12.0",
    "types-pyyaml>=6.0.12.20250516",
]
